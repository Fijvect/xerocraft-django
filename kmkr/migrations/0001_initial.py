# Generated by Django 2.0.3 on 2018-06-12 19:50

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('members', '0019_auto_20180422_1221'),
        ('books', '0026_auto_20180611_1321'),
    ]

    operations = [
        migrations.CreateModel(
            name='OnAirPersonality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moniker', models.CharField(help_text="Moniker/nickname such as 'The Vinyl Wizard'.", max_length=40)),
                ('bio', models.TextField(help_text='Biographical info for public consumption.', max_length=2048)),
                ('active', models.BooleanField(default=True, help_text='Checked if this person is still active.')),
                ('member', models.ForeignKey(help_text='The member who is authorized to be on air.', on_delete=django.db.models.deletion.PROTECT, to='members.Member')),
            ],
            options={
                'verbose_name': 'On Air Personality',
                'verbose_name_plural': 'On Air Personalities',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='A short description/name for the task.', max_length=80)),
                ('description', models.TextField(help_text='A description of the show for public consumption.', max_length=2048)),
                ('start_time', models.TimeField(help_text='The time at which the show begins.')),
                ('minute_duration', models.IntegerField(help_text='The duration of the show in MINUTES.')),
                ('mondays', models.BooleanField(default=False)),
                ('tuesdays', models.BooleanField(default=False)),
                ('wednesdays', models.BooleanField(default=False)),
                ('thursdays', models.BooleanField(default=False)),
                ('fridays', models.BooleanField(default=False)),
                ('saturdays', models.BooleanField(default=False)),
                ('sundays', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True, help_text='Checked if this show is still active.')),
                ('hosts', models.ManyToManyField(help_text='Host(s) of the show.', to='kmkr.OnAirPersonality')),
            ],
        ),
        migrations.CreateModel(
            name='UnderwritingLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when_read', models.DateTimeField(help_text='The date & time the spot was read on-air.')),
            ],
            options={
                'verbose_name': 'Underwriting Log Entry',
                'verbose_name_plural': 'Underwriting Log Entries',
            },
        ),
        migrations.CreateModel(
            name='UnderwritingSpots',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_price', models.DecimalField(decimal_places=2, help_text='The UNIT price at which this/these item(s) sold.', max_digits=6)),
                ('qty_sold', models.IntegerField(blank=True, default=None, help_text='The quantity of the item sold. Leave blank if quantity is not known.', null=True)),
                ('start_date', models.DateField(default=datetime.date.today, help_text='The first day on which a spot can run.')),
                ('end_date', models.DateField(default=datetime.date.today, help_text='The last day on which a spot can run.')),
                ('spot_seconds', models.IntegerField(help_text='The length of each spot in seconds.', validators=[django.core.validators.MinValueValidator(0)])),
                ('slot', models.CharField(choices=[('DAY', 'Daytime'), ('DRV', 'Drivetime'), ('SHW', 'Specific Show(s)'), ('CST', 'Custom Time')], help_text='The time slot during which the spot(s) can air.', max_length=3)),
                ('title', models.CharField(help_text='The name of the audio file on Radio DJ.', max_length=80)),
                ('script', models.TextField(help_text='The text to read on-air.', max_length=2048)),
                ('custom_details', models.TextField(blank=True, help_text='Specify details if slot is CUSTOM.', max_length=1024)),
                ('holds_donation', models.ForeignKey(blank=True, help_text='Who currently has the donation in hand. Blank if already deposited or submitted to treasurer.', null=True, on_delete=django.db.models.deletion.PROTECT, to='members.Member')),
                ('sale', models.ForeignKey(help_text='The sale for which this is a line item.', on_delete=django.db.models.deletion.CASCADE, to='books.Sale')),
                ('specific_shows', models.ManyToManyField(blank=True, help_text='If spot(s) MUST run during some specific show(s), select them.', to='kmkr.Show')),
            ],
            options={
                'verbose_name': 'Underwriting Spots',
                'verbose_name_plural': 'Underwriting Spots',
            },
        ),
        migrations.AddField(
            model_name='underwritinglogentry',
            name='spec',
            field=models.ForeignKey(help_text='The associated agreement.', on_delete=django.db.models.deletion.PROTECT, to='kmkr.UnderwritingSpots'),
        ),
    ]
