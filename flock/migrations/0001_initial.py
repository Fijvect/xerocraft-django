# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-04 18:04
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EntityInMeeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntityInProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_verified', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('SO?', 'Verifying participants and/or resources'), ('G2G', 'Everything is good to go'), ('BAD', "People and/or resources weren't available")], default='SO?', max_length=3)),
                ('starts', models.DateTimeField()),
                ('duration', models.DecimalField(decimal_places=2, max_digits=4)),
                ('asked_instructor', models.DateField(default=None)),
                ('asked_assistants', models.DateField(default=None)),
                ('asked_students', models.DateField(default=None)),
                ('invoiced_students', models.DateField(default=None)),
                ('asked_for_resources', models.DateField(default=None)),
                ('instructor_is_go', models.BooleanField(default=False)),
                ('assistants_are_go', models.BooleanField(default=False)),
                ('students_are_go', models.BooleanField(default=False)),
                ('students_have_paid', models.BooleanField(default=False)),
                ('resources_are_go', models.BooleanField(default=False)),
                ('seats_still_available', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('short_description', models.CharField(max_length=240)),
                ('long_description', models.TextField(max_length=2048)),
                ('min_students_required', models.IntegerField()),
                ('max_students_allowed', models.IntegerField()),
                ('max_students_for_teacher', models.IntegerField()),
                ('additional_students_per_ta', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ResourceControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('OWN', 'Owner'), ('MGR', 'Manager')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='TimePattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disposition', models.CharField(choices=[('AV', 'available'), ('AV', 'unavailable')], max_length=2)),
                ('wom', models.CharField(choices=[('1', '1st'), ('2', '2nd'), ('3', '3rd'), ('4', '4th'), ('L', 'last'), ('E', 'every')], max_length=1)),
                ('dow', models.CharField(choices=[('Mo', 'Monday'), ('Tu', 'Tuesday'), ('We', 'Wednesday'), ('Th', 'Thursday'), ('Fr', 'Friday'), ('Sa', 'Saturday'), ('Su', 'Sunday')], max_length=2)),
                ('hour', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('minute', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59)])),
                ('morning', models.BooleanField(default=False)),
                ('duration', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='flock.Entity')),
                ('django_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('flock.entity',),
        ),
        migrations.CreateModel(
            name='PersonInMeeting',
            fields=[
                ('entityinmeeting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='flock.EntityInMeeting')),
                ('status', models.CharField(max_length=3)),
            ],
            bases=('flock.entityinmeeting',),
        ),
        migrations.CreateModel(
            name='PersonInProposal',
            fields=[
                ('entityinproposal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='flock.EntityInProposal')),
                ('role', models.CharField(choices=[('TCH', 'Teacher'), ('HLP', 'Teaching Assistant'), ('STU', 'Student')], max_length=3)),
            ],
            bases=('flock.entityinproposal',),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='flock.Entity')),
                ('name', models.CharField(max_length=80)),
                ('short_description', models.CharField(max_length=240)),
                ('long_description', models.TextField(max_length=2048)),
                ('managers_email', models.EmailField(help_text='If blank, instructors will need to manually book the resource.', max_length=254)),
            ],
            bases=('flock.entity',),
        ),
        migrations.CreateModel(
            name='ResourceInMeeting',
            fields=[
                ('entityinmeeting_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='flock.EntityInMeeting')),
                ('status', models.CharField(choices=[('NOT', 'Not yet reserved'), ('SO?', 'Waiting for approval'), ('G2G', 'Resource is reserved')], max_length=3)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Resource')),
            ],
            bases=('flock.entityinmeeting',),
        ),
        migrations.AddField(
            model_name='timepattern',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Entity'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Proposal'),
        ),
        migrations.AddField(
            model_name='entityinproposal',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Entity'),
        ),
        migrations.AddField(
            model_name='entityinproposal',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Proposal'),
        ),
        migrations.AddField(
            model_name='entityinmeeting',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Entity'),
        ),
        migrations.AddField(
            model_name='entityinmeeting',
            name='meeting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Meeting'),
        ),
        migrations.AddField(
            model_name='resourcecontrol',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Person'),
        ),
        migrations.AddField(
            model_name='resourcecontrol',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flock.Resource'),
        ),
    ]
