# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-10-09 22:11
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('books', '0040_auto_20161004_2022'),
    ]

    operations = [
        migrations.CreateModel(
            name='PayableInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField(default=datetime.date.today, help_text='The date of the invoice.')),
                ('amount', models.DecimalField(decimal_places=2, help_text='The dollar amount they invoiced.', max_digits=6)),
                ('description', models.TextField(help_text='Description of goods and/or services we received from them.', max_length=4096)),
                ('account', models.ForeignKey(help_text='The expense account associated with this invoice.', on_delete=django.db.models.deletion.PROTECT, to='books.Account')),
                ('entity', models.ForeignKey(blank=True, default=None, help_text='If we owe some outside person/org, specify them here.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.Entity')),
                ('user', models.ForeignKey(blank=True, default=None, help_text='If we owe a user, specify them here.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayableInvoiceNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Anything you want to say about the item on which this note appears.', max_length=2048)),
                ('author', models.ForeignKey(blank=True, help_text='The user who wrote this note.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(help_text='The invoice to which the note pertains.', on_delete=django.db.models.deletion.CASCADE, to='books.PayableInvoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayableInvoiceReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portion', models.DecimalField(blank=True, decimal_places=2, default=None, help_text="Leave blank unless we're only paying a portion of the invoice.", max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReceivableInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField(default=datetime.date.today, help_text='The date on which the invoice was created.')),
                ('amount', models.DecimalField(decimal_places=2, help_text='The dollar amount we are invoicing them for.', max_digits=6)),
                ('description', models.TextField(help_text='Description of goods and/or services we delivered to them.', max_length=4096)),
                ('account', models.ForeignKey(help_text='The revenue account associated with this invoice.', on_delete=django.db.models.deletion.PROTECT, to='books.Account')),
                ('entity', models.ForeignKey(blank=True, default=None, help_text='If some outside person/org owes us, specify them here.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.Entity')),
                ('user', models.ForeignKey(blank=True, default=None, help_text='If a user owes us, specify them here.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReceivableInvoiceNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Anything you want to say about the item on which this note appears.', max_length=2048)),
                ('author', models.ForeignKey(blank=True, help_text='The user who wrote this note.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('invoice', models.ForeignKey(help_text='The invoice to which the note pertains.', on_delete=django.db.models.deletion.CASCADE, to='books.ReceivableInvoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReceivableInvoiceReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portion', models.DecimalField(blank=True, decimal_places=2, default=None, help_text="Leave blank unless they're only paying a portion of the invoice.", max_digits=6, null=True)),
                ('invoice', models.ForeignKey(help_text='The invoice that is paid by the income transaction.', on_delete=django.db.models.deletion.CASCADE, to='books.ReceivableInvoice')),
                ('sale', models.ForeignKey(help_text='The income transaction that pays the invoice.', on_delete=django.db.models.deletion.CASCADE, to='books.Sale')),
            ],
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='account',
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='entity_invoiced',
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='user_invoiced',
        ),
        migrations.RemoveField(
            model_name='invoicenote',
            name='author',
        ),
        migrations.RemoveField(
            model_name='invoicenote',
            name='invoice',
        ),
        migrations.RemoveField(
            model_name='invoicereference',
            name='invoice',
        ),
        migrations.RemoveField(
            model_name='invoicereference',
            name='sale',
        ),
        migrations.AlterField(
            model_name='expensetransaction',
            name='recipient_email',
            field=models.EmailField(blank=True, help_text='Optional, sometimes useful ', max_length=40, verbose_name='Optional email'),
        ),
        migrations.DeleteModel(
            name='Invoice',
        ),
        migrations.DeleteModel(
            name='InvoiceNote',
        ),
        migrations.DeleteModel(
            name='InvoiceReference',
        ),
        migrations.AddField(
            model_name='payableinvoicereference',
            name='exp',
            field=models.ForeignKey(help_text='The expense transaction by which we pay the invoice.', on_delete=django.db.models.deletion.CASCADE, to='books.ExpenseTransaction'),
        ),
        migrations.AddField(
            model_name='payableinvoicereference',
            name='invoice',
            field=models.ForeignKey(help_text='The invoice that is paid by the expense transaction.', on_delete=django.db.models.deletion.CASCADE, to='books.PayableInvoice'),
        ),
    ]
