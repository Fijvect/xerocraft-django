# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-12 21:40
from __future__ import unicode_literals

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('members', '0002_auto_20170405_1551'),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingPermitPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(help_text='Permit is valid FROM this date, inclusive.')),
                ('end_date', models.DateField(help_text='Permit is valid TO this date, inclusive.')),
            ],
            options={
                'ordering': ['permit', 'start_date'],
            },
        ),
        migrations.RemoveField(
            model_name='permitrenewal',
            name='permit',
        ),
        migrations.RemoveField(
            model_name='toolissue',
            name='reporter',
        ),
        migrations.RemoveField(
            model_name='toolissue',
            name='tool',
        ),
        migrations.RemoveField(
            model_name='toolissuenote',
            name='author',
        ),
        migrations.RemoveField(
            model_name='toolissuenote',
            name='toolIssue',
        ),
        migrations.AlterModelOptions(
            name='parkingpermit',
            options={},
        ),
        migrations.AddField(
            model_name='parkingpermit',
            name='billing_period',
            field=models.CharField(choices=[('/', 'N/A'), ('W', 'Weeks'), ('M', 'Months'), ('Y', 'Quarters'), ('Y', 'Years')], default='/', help_text='The price per period will be billed at this frequency.', max_length=1),
        ),
        migrations.AddField(
            model_name='parkingpermit',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The location of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.Location'),
        ),
        migrations.AddField(
            model_name='parkingpermit',
            name='price_per_period',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='The price per unit time for this permit.', max_digits=6),
        ),
        migrations.AddField(
            model_name='tool',
            name='created',
            field=models.DateField(default=django.utils.timezone.now, help_text='Date/time on which the item was tagged.'),
        ),
        migrations.AddField(
            model_name='tool',
            name='is_in_inventoried_space',
            field=models.BooleanField(default=True, help_text='True if the item is in our inventoried space/building(s). False if the owner has taken it home.'),
        ),
        migrations.AddField(
            model_name='tool',
            name='is_loaned',
            field=models.BooleanField(default=False, help_text='Checked if this tool is on loan to us. Unchecked if we own it.'),
        ),
        migrations.AddField(
            model_name='tool',
            name='loan_terms',
            field=models.TextField(default='', help_text='If tool is loaned, these are the terms specified by the loaner.', max_length=1024),
        ),
        migrations.AddField(
            model_name='tool',
            name='loaned_by',
            field=models.ForeignKey(default=None, help_text='If tool is loaned, this is the member who loaned it to us.', null=True, on_delete=django.db.models.deletion.PROTECT, to='members.Member'),
        ),
        migrations.AddField(
            model_name='tool',
            name='ok_to_move',
            field=models.BooleanField(default=True, help_text='Is it OK to carefully move the item to another location without involving owner?'),
        ),
        migrations.AddField(
            model_name='tool',
            name='short_desc',
            field=models.CharField(default='ERROR: NEEDS DESC', help_text='The items name or a short description.', max_length=40),
        ),
        migrations.AlterField(
            model_name='location',
            name='short_desc',
            field=models.CharField(default='ERROR: NEEDS DESC', help_text='A short description/name for the location.', max_length=40),
        ),
        migrations.AlterField(
            model_name='parkingpermit',
            name='created',
            field=models.DateField(default=django.utils.timezone.now, help_text='Date/time on which the item was tagged.'),
        ),
        migrations.AlterField(
            model_name='parkingpermit',
            name='short_desc',
            field=models.CharField(default='ERROR: NEEDS DESC', help_text='The items name or a short description.', max_length=40),
        ),
        migrations.AlterField(
            model_name='permitscan',
            name='when',
            field=models.DateTimeField(help_text='Date/time on which the permit was scanned.'),
        ),
        migrations.AlterField(
            model_name='tool',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The location of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.Location'),
        ),
        migrations.AlterField(
            model_name='tool',
            name='shop',
            field=models.ForeignKey(blank=True, help_text='The shop that owns the tool.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.Shop'),
        ),
        migrations.AlterUniqueTogether(
            name='parkingpermit',
            unique_together=set([]),
        ),
        migrations.DeleteModel(
            name='PermitRenewal',
        ),
        migrations.DeleteModel(
            name='ToolIssue',
        ),
        migrations.DeleteModel(
            name='ToolIssueNote',
        ),
        migrations.AddField(
            model_name='parkingpermitpayment',
            name='permit',
            field=models.ForeignKey(help_text='The parking permit for which the payment was made.', on_delete=django.db.models.deletion.CASCADE, related_name='renewals', to='inventory.ParkingPermit'),
        ),
    ]
